#!/usr/bin/make -f 					
# 							-*- makefile -*-
# debian/rules file for the Debian/GNU Linux pgapack package
# Copyright 2006 - 2007 by Dirk Eddelbuettel <edd@debian.org>
# Copyright 2017 - 2021 by Ralf Schlatterbeck <rsc@runtux.com>

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

package		:= $(shell head -1 debian/changelog | cut -f1 -d" ")
libname 	:= lib${package}

v_upstream      := $(shell cd pgapack && git describe)
major 		:= $(firstword $(subst ., ,$(v_upstream)))
minor 		:= $(word 2,$(subst ., ,$(subst -, ,$(v_upstream))))
patchlevel      := $(or $(word 2,$(subst -, ,$(v_upstream))),0)

serbasename	:= ${package}-serial
serpackage	:= lib${serbasename}
openmpibasename := ${package}-openmpi
openmpipackage	:= lib${openmpibasename}
mpichbasename 	:= ${package}-mpich
mpichpackage	:= lib${mpichbasename}
lambasename 	:= ${package}-lam
lampackage	:= lib${lambasename}

staticlib 	:= ${serpackage}.a
sharedfull 	:= ${serpackage}.so.${major}.${minor}.${patchlevel}
sharedshort 	:= ${serpackage}.so.${major}
sharedlib 	:= ${serpackage}.so

openmpistaticlib 	:= ${openmpipackage}.a
openmpisharedfull 	:= ${openmpipackage}.so.${major}.${minor}.${patchlevel}
openmpisharedshort 	:= ${openmpipackage}.so.${major}
openmpisharedlib 	:= ${openmpipackage}.so

mpichstaticlib	 	:= ${mpichpackage}.a
mpichsharedfull 	:= ${mpichpackage}.so.${major}.${minor}.${patchlevel}
mpichsharedshort 	:= ${mpichpackage}.so.${major}
mpichsharedlib 		:= ${mpichpackage}.so

lamstaticlib	 	:= ${lampackage}.a
lamsharedfull	 	:= ${lampackage}.so.${major}.${minor}.${patchlevel}
lamsharedshort 		:= ${lampackage}.so.${major}
lamsharedlib 		:= ${lampackage}.so

debdir		:= debian/${package}

build: build-stamp
build-stamp:
	dh_testdir
	$(MAKE) CC=/usr/bin/mpicc.openmpi FC=/usr/bin/mpif77.openmpi \
	    MPI_INC= MPI_LIB= MPI=openmpi
	$(MAKE) MPI=openmpi clean
	$(MAKE) MPI=mpich
	$(MAKE) MPI=mpich clean
	$(MAKE) MPI=lam
	$(MAKE) MPI=lam clean
	$(MAKE) MPI=serial
	$(MAKE) MPI=serial clean
	mv -v lib/generic-openmpi/libpgapack.a \
	    lib/generic-openmpi/${openmpistaticlib}
	mv -v lib/generic-mpich/libpgapack.a \
	    lib/generic-mpich/${mpichstaticlib}
	mv -v lib/generic-lam/libpgapack.a \
	    lib/generic-lam/${lamstaticlib}
	mv -v lib/generic-serial/libpgapack.a \
	    lib/generic-serial/${staticlib}

	touch build-stamp

versioninfo:
	@echo $(package) $(major).$(minor).$(patchlevel)

clean:
	dh_testdir
	dh_testroot
	rm -rf debian/.debhelper debian/pgapack \
	    debian/libpgapack-openmpi debian/libpgapack-serial \
	    debian/libpgapack-lam debian/libpgapack-mpich
	rm -f build-stamp debian/files \
	    libpgapack-serial.substvars libpgapack-lam.debhelper.log \
	    libpgapack-lam.substvars libpgapack-mpich.debhelper.log \
	    libpgapack-mpich.substvars libpgapack-openmpi.debhelper.log \
	    libpgapack-openmpi.substvars libpgapack-serial.debhelper.log
	$(MAKE) clobber
	dh_clean


install: 	build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs

	# Add here commands to install the package into debian/<packagename>
	dh_install -p${serpackage} lib/generic-serial/lib* usr/lib/
	(cd debian/${serpackage}/usr/lib &&       \
	    ln -s ${sharedfull} ${sharedshort} && \
	    ln -s ${sharedshort} ${sharedlib} )
	dh_install -p${serpackage} include/* usr/include/${serbasename}/
	# need the fake mpi headers for serial
	dh_install -p${serpackage} fakempi/* usr/include/${serbasename}/
	dh_installdirs -p${serpackage} usr/share/lintian/overrides
	install -v -c -m 0644 debian/${serpackage}.overrides \
	    debian/${serpackage}/usr/share/lintian/overrides/${serpackage}

	dh_install -p${openmpipackage} lib/generic-openmpi/lib* usr/lib/
	(cd debian/${openmpipackage}/usr/lib &&                 \
	    ln -s ${openmpisharedfull} ${openmpisharedshort} && \
	    ln -s ${openmpisharedshort} ${openmpisharedlib} )
	dh_install -p${openmpipackage} include/* usr/include/${openmpibasename}/
	dh_installdirs -p${openmpipackage} usr/share/lintian/overrides
	install -v -c -m 0644 debian/${openmpipackage}.overrides \
	    debian/${openmpipackage}/usr/share/lintian/overrides/${openmpipackage}

	dh_install -p${mpichpackage} lib/generic-mpich/lib* usr/lib/
	(cd debian/${mpichpackage}/usr/lib &&               \
	    ln -s ${mpichsharedfull} ${mpichsharedshort} && \
	    ln -s ${mpichsharedshort} ${mpichsharedlib} )
	dh_install -p${mpichpackage} include/* usr/include/${mpichbasename}/
	dh_installdirs -p${mpichpackage} usr/share/lintian/overrides
	install -v -c -m 0644 debian/${mpichpackage}.overrides \
	    debian/${mpichpackage}/usr/share/lintian/overrides/${mpichpackage}

	dh_install -p${lampackage} lib/generic-lam/lib* usr/lib/
	(cd debian/${lampackage}/usr/lib &&                 \
	    ln -s ${lamsharedfull} ${lamsharedshort} && \
	    ln -s ${lamsharedshort} ${lamsharedlib} )
	dh_install -p${lampackage} include/* usr/include/${lambasename}/
	dh_installdirs -p${lampackage} usr/share/lintian/overrides
	install -v -c -m 0644 debian/${lampackage}.overrides \
	    debian/${lampackage}/usr/share/lintian/overrides/${lampackage}


# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installdocs		-p${package}	test/ util/ 	
	dh_installexamples	-p${package}	examples/*
	dh_installchangelogs	
	dh_installman		-p${package}	man/man3/*
	dh_fixperms
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs	
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installcatalogs
#	dh_installpam
#	dh_installmime
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_undocumented
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_python
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
