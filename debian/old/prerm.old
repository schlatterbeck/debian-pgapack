#!/bin/sh

# Abort if any command returns an error value
set -e

PACKAGE=pgapack

# This script is called as the first step in removing the package from
# the system.  This includes cases where the user explicitly asked for
# the package to be removed, upgrade, automatic removal due to conflicts,
# and deconfiguration due to temporary removal of a depended-on package.

case "$1" in
  remove)
    # This package about to be removed.
    :

    # There are two sub-cases:
    if test "${2+set}" = set; then
      if test "$2" != in-favour; then
        echo "$0: undocumented call to \`prerm $*'" 1>&2
        exit 0
      fi
      # We are being removed because of a conflict with package $3
      # (version $4), which is now being installed.
      :

    else
      # The package is being removed in its own right.
      :

    fi ;;
  deconfigure)
    if test "$2" != in-favour -o "$5" != removing; then
      echo "$0: undocumented call to \`prerm $*'" 1>&2
      exit 0
    fi
    # Package $6 (version $7) which we depend on is being removed due
    # to a conflict with package $3 (version $4), and this package is
    # being deconfigured until $6 can be reinstalled.
    :

    ;;
  upgrade)
    # Prepare to upgrade FROM THIS VERSION of this package to version $2.
    :

    ;;
  failed-upgrade)
    # Prepare to upgrade from version $2 of this package TO THIS VERSION.
    # This is only used if the old version's prerm couldn't handle it,
    # and returned non-zero.  (Fix old prerm bugs here.)
    :

    ;;
  *) echo "$0: didn't understand being called with \`$1'" 1>&2
     exit 0;;
esac

# FSSTND compatibility symlinks
if [ \( "$1" = "upgrade" -o "$1" = "remove" \) \
    -a -L /usr/doc/$PACKAGE ]; then
	rm -f /usr/doc/$PACKAGE
fi

#if [ -x /usr/sbin/install-docs ]; then
#    /usr/sbin/install-docs -r $PACKAGE
#fi

exit 0
